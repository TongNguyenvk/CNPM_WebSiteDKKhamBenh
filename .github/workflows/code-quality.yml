name: 📊 Code Quality Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

env:
  NODE_VERSION: '18'

jobs:
  # ==================== CODE ANALYSIS ====================
  
  sonarcloud:
    name: 🔍 SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📥 Install dependencies
        run: |
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: 🧪 Run tests with coverage
        run: |
          cd frontend && npm run test
          cd ../backend && npm run test

      - name: 🔍 SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # ==================== DEPENDENCY ANALYSIS ====================
  
  dependency-review:
    name: 📦 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC

  # ==================== CODE METRICS ====================
  
  code-metrics:
    name: 📊 Code Metrics
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📊 Analyze code complexity
        run: |
          echo "📊 Analyzing code complexity..."
          
          # Count lines of code
          echo "## Lines of Code" > code-metrics.md
          echo "### Frontend" >> code-metrics.md
          find frontend/src -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | xargs wc -l | tail -1 >> code-metrics.md
          
          echo "### Backend" >> code-metrics.md
          find backend/src -name "*.js" | xargs wc -l | tail -1 >> code-metrics.md
          
          # Count files
          echo "## File Count" >> code-metrics.md
          echo "### Frontend" >> code-metrics.md
          echo "TypeScript/JavaScript files: $(find frontend/src -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | wc -l)" >> code-metrics.md
          
          echo "### Backend" >> code-metrics.md
          echo "JavaScript files: $(find backend/src -name "*.js" | wc -l)" >> code-metrics.md
          
          # Component analysis
          echo "## Component Analysis" >> code-metrics.md
          echo "React components: $(find frontend/src -name "*.tsx" | wc -l)" >> code-metrics.md
          echo "Pages: $(find frontend/src/app -name "page.tsx" | wc -l)" >> code-metrics.md

      - name: 📊 Upload metrics
        uses: actions/upload-artifact@v4
        with:
          name: code-metrics
          path: code-metrics.md

  # ==================== BUNDLE ANALYSIS ====================
  
  bundle-analysis:
    name: 📦 Bundle Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for analysis
        run: npm run build

      - name: 📊 Analyze bundle size
        run: |
          echo "📦 Bundle Size Analysis" > bundle-analysis.md
          echo "======================" >> bundle-analysis.md
          echo "" >> bundle-analysis.md
          
          if [ -d ".next/static" ]; then
            echo "## Static Assets" >> bundle-analysis.md
            du -sh .next/static/* | sort -hr >> bundle-analysis.md
            echo "" >> bundle-analysis.md
            
            echo "## JavaScript Bundles" >> bundle-analysis.md
            find .next/static/chunks -name "*.js" -exec du -sh {} \; | sort -hr | head -10 >> bundle-analysis.md
            echo "" >> bundle-analysis.md
            
            echo "## Total Build Size" >> bundle-analysis.md
            du -sh .next >> bundle-analysis.md
          fi

      - name: 📊 Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: frontend/bundle-analysis.md

  # ==================== PERFORMANCE BUDGET ====================
  
  performance-budget:
    name: ⚡ Performance Budget
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🏗️ Build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: ⚡ Check performance budget
        working-directory: ./frontend
        run: |
          echo "⚡ Performance Budget Check" > performance-budget.md
          echo "===========================" >> performance-budget.md
          echo "" >> performance-budget.md
          
          # Define budget limits (in KB)
          MAX_BUNDLE_SIZE=500
          MAX_CHUNK_SIZE=250
          
          if [ -d ".next/static/chunks" ]; then
            echo "## Bundle Size Check" >> performance-budget.md
            
            # Check main bundle size
            MAIN_BUNDLE_SIZE=$(find .next/static/chunks -name "*.js" -exec du -k {} \; | awk '{sum+=$1} END {print sum}')
            echo "Main bundle size: ${MAIN_BUNDLE_SIZE}KB (Budget: ${MAX_BUNDLE_SIZE}KB)" >> performance-budget.md
            
            if [ "$MAIN_BUNDLE_SIZE" -gt "$MAX_BUNDLE_SIZE" ]; then
              echo "❌ Bundle size exceeds budget!" >> performance-budget.md
              exit 1
            else
              echo "✅ Bundle size within budget" >> performance-budget.md
            fi
            
            echo "" >> performance-budget.md
            echo "## Individual Chunk Sizes" >> performance-budget.md
            find .next/static/chunks -name "*.js" -exec du -k {} \; | while read size file; do
              if [ "$size" -gt "$MAX_CHUNK_SIZE" ]; then
                echo "⚠️ Large chunk: $file (${size}KB)" >> performance-budget.md
              fi
            done
          fi

      - name: 📊 Upload performance budget
        uses: actions/upload-artifact@v4
        with:
          name: performance-budget
          path: frontend/performance-budget.md

  # ==================== SUMMARY REPORT ====================
  
  quality-summary:
    name: 📋 Quality Summary
    runs-on: ubuntu-latest
    needs: [code-metrics, bundle-analysis, performance-budget]
    if: always()
    
    steps:
      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 📋 Generate quality summary
        run: |
          echo "# 📊 Code Quality Report" > quality-summary.md
          echo "Generated on: $(date)" >> quality-summary.md
          echo "" >> quality-summary.md
          
          echo "## Job Results" >> quality-summary.md
          echo "- Code Metrics: ${{ needs.code-metrics.result }}" >> quality-summary.md
          echo "- Bundle Analysis: ${{ needs.bundle-analysis.result }}" >> quality-summary.md
          echo "- Performance Budget: ${{ needs.performance-budget.result }}" >> quality-summary.md
          echo "" >> quality-summary.md
          
          # Include individual reports if they exist
          if [ -f "artifacts/code-metrics/code-metrics.md" ]; then
            echo "## Code Metrics" >> quality-summary.md
            cat artifacts/code-metrics/code-metrics.md >> quality-summary.md
            echo "" >> quality-summary.md
          fi
          
          if [ -f "artifacts/bundle-analysis/bundle-analysis.md" ]; then
            echo "## Bundle Analysis" >> quality-summary.md
            cat artifacts/bundle-analysis/bundle-analysis.md >> quality-summary.md
            echo "" >> quality-summary.md
          fi
          
          if [ -f "artifacts/performance-budget/performance-budget.md" ]; then
            echo "## Performance Budget" >> quality-summary.md
            cat artifacts/performance-budget/performance-budget.md >> quality-summary.md
          fi

      - name: 📊 Upload quality summary
        uses: actions/upload-artifact@v4
        with:
          name: quality-summary
          path: quality-summary.md
