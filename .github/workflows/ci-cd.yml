name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  DOCKER_USERNAME: tongnguyen

jobs:
  # ==================== BUILD & TEST ====================

  build-and-test:
    name: 🧪 Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Frontend Build
      - name: 📥 Install frontend dependencies
        working-directory: ./frontend
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Build frontend
        working-directory: ./frontend
        run: npm run build

      # Backend Build
      - name: 📥 Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: 🧪 Test backend (if available)
        working-directory: ./backend
        run: npm test || echo "No tests configured"

      # Security Check
      - name: 🔍 Security audit
        run: |
          echo "🔍 Running security audits..."
          cd frontend && npm audit --audit-level=high || echo "Frontend audit completed with warnings"
          cd ../backend && npm audit --audit-level=high || echo "Backend audit completed with warnings"

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: frontend-build
          path: frontend/.next
          retention-days: 1

  # ==================== DOCKER BUILD & PUSH ====================

  docker-deploy:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: 📥 Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next

      - name: 🏷️ Generate tags
        id: meta
        run: |
          echo "short_sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: 🧱 Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/cnpm-backend:latest
            ${{ env.DOCKER_USERNAME }}/cnpm-backend:${{ steps.meta.outputs.short_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🧱 Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/cnpm-frontend:latest
            ${{ env.DOCKER_USERNAME }}/cnpm-frontend:${{ steps.meta.outputs.short_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🎉 Deploy Success
        run: |
          echo "✅ Docker images built and pushed successfully!"
          echo "🐳 Backend: ${{ env.DOCKER_USERNAME }}/cnpm-backend:latest"
          echo "🐳 Frontend: ${{ env.DOCKER_USERNAME }}/cnpm-frontend:latest"
